name: Splatoon3 Result Uploader

on:
  schedule:
    - cron: '0 0-23/2 * * *'  # 2時間ごとにこのワークフローを実行
  workflow_dispatch:  # 手動でワークフローをトリガーするオプション

jobs:
  build:
    runs-on: ubuntu-latest  # Ubuntuの最新環境でジョブを実行
    env:
      CONFIG_TXT: ${{ secrets.CONFIG_TXT }}  # GitHub Secretsから取得した設定内容
      MY_GITHUB_PAT: ${{ secrets.MY_GITHUB_PAT }} # シークレット更新用のPersonal Access Token (PAT)

    name: Upload BattleLogs  # ジョブの名前
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Node.js のセットアップ
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # 使用するNode.jsのバージョン

      # frozenpandaman/s3sのリポジトリをチェックアウト
      - name: Checkout frozenpandaman/s3s
        uses: actions/checkout@v3
        with:
          repository: 'frozenpandaman/s3s'  # チェックアウトするリポジトリの指定
          path: s3s  # リポジトリをチェックアウトするパス

      # Python 3.11のセットアップ
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11  # 使用するPythonのバージョン
          cache: 'pip'  # pipのキャッシュを有効にする
          cache-dependency-path: 's3s/requirements.txt'  # 依存関係のキャッシュ用のパス

      # シークレットから読み込んだCONFIG_TXTをconfig.txtとして保存
      - name: Generate config.txt
        working-directory: s3s
        run: |
          echo '${{ env.CONFIG_TXT }}' > config.txt  # シークレットをconfig.txtに書き込む

      # s3sの依存パッケージをインストール
      - name: Install s3s requirements
        working-directory: s3s
        run: |
          pip install -r requirements.txt

      # s3sを実行し、バトルログをアップロード (必要に応じてトークンを再生成)
      - name: Run s3s
        working-directory: s3s
        run: |
          python3 s3s.py -r

      # config.txtが更新された場合のみ、GitHub Secretsを更新
      - name: Update GitHub Secrets with new config.txt (if updated)
        if: ${{ steps.check_update.outputs.updated == 'true' }}
        working-directory: s3s
        run: |
          node ../update_secrets.js config.txt
